# This is a basic workflow to help you get started with Actions

name: Package publication 📦 

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
    
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      USERNAME: ${{ secrets.USERNAME }}
      PASSWORD: ${{ secrets.PASSWORD }}
      REPOSITORY: ${{ secrets.REPOSITORY }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      DOCKER_USER: ${{ github.actor }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        name: 🗂 Check out code
      
      - run: echo USERNAME=$USERNAME >> .env
      - run: echo PASSWORD=$PASSWORD >> .env

      - uses: actions/setup-python@v1
      - uses: BSFishy/pip-action@v1
        with:
          requirements: requirements.txt
      - run: python init.py
        
      - name: 🔓 Auth GithubPackages
        run: echo "$DOCKER_PASSWORD" | docker login docker.pkg.github.com -u $DOCKER_USER --password-stdin

      # Client package
      - name: 🏗 Build the client Docker image
        run: docker build -t $REPOSITORY .

      - name: 🏷 Tag the client Docker image
        run: |
          docker tag $REPOSITORY:latest $REPOSITORY:latest
      - name: 🚀 Push client Docker image to Github package registry
        run: |
          docker push $REPOSITORY:latest
